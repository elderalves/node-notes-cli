name: Release
on:
  push:
    branches:
      - main
      - master
      - 'alpha/*'
      - 'beta/*'
      - 'rc/*'
      - 'develop'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Determine release type
        id: release_type
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [[ $BRANCH_NAME == alpha/* ]]; then
            echo "type=alpha" >> $GITHUB_OUTPUT
          elif [[ $BRANCH_NAME == beta/* ]]; then
            echo "type=beta" >> $GITHUB_OUTPUT
          elif [[ $BRANCH_NAME == rc/* ]]; then
            echo "type=rc" >> $GITHUB_OUTPUT
          elif [[ $BRANCH_NAME == "develop" ]]; then
            echo "type=alpha" >> $GITHUB_OUTPUT
          else
            echo "type=release" >> $GITHUB_OUTPUT
          fi

      - name: Check if release is necessary
        id: check_release
        run: |
          lastTag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$lastTag" ]; then
            echo "No previous tag found. Proceeding with release."
            echo "release=true" >> $GITHUB_OUTPUT
          else
            echo "Last tag: $lastTag"
            if git log "$lastTag"..HEAD --pretty=format:"%s" | grep -E '^(feat|fix|docs|style|refactor|perf)' > /dev/null; then
              echo "Found commit eligible for release."
              echo "release=true" >> $GITHUB_OUTPUT
            else
              echo "No eligible commit found. Skipping release."
              echo "release=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Release
        if: steps.check_release.outputs.release == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ "${{ steps.release_type.outputs.type }}" != "release" ]; then
            npm run release -- --ci --preRelease=${{ steps.release_type.outputs.type }}
          else
            npm run release -- --ci
          fi
